services:
  # Lightweight Unified Cross-Channel AI Agents Service
  # Core servers without heavy ML dependencies for reliable deployment
  - type: web
    name: cross-channel-ai-core
    runtime: python3
    buildCommand: |
      # Use lightweight requirements for better build reliability
      echo "Using Python version: $(python --version)"
      
      # Upgrade pip
      pip install --upgrade pip
      
      # Install core dependencies only
      pip install -r requirements-render.txt --no-cache-dir
      
      # Verify core imports
      python -c "import aiohttp, flask, twilio, openai; print('✅ Core dependencies verified')"
      
      # Install Node.js for Conversations API
      curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
      apt-get install -y nodejs
      echo "Node.js version: $(node --version)"
      echo "NPM version: $(npm --version)"
      
      # Install and build Conversations frontend
      cd Conversations
      echo "Installing Node.js dependencies..."
      npm install --production --no-optional
      echo "Building frontend..."
      npm run render-postbuild
      echo "Node.js build completed"
      cd ..
      
      # Prepare startup script
      chmod +x start_unified_server.py
      
      echo "✅ Build completed successfully"
    startCommand: python start_unified_server.py
    plan: starter
    env:
      - key: DEPLOYMENT_ENVIRONMENT
        value: render
      - key: PORT
        generateValue: true
      - key: NODE_ENV
        value: production
      # Twilio Configuration
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_INTELLIGENCE_SERVICE_SID
        sync: false
      # OpenAI Configuration
      - key: OPENAI_API_KEY
        sync: false
      # Segment Configuration (optional)
      - key: SEGMENT_SPACE_ID
        sync: false
      - key: SEGMENT_ACCESS_SECRET
        sync: false
      # Debug Configuration
      - key: DEBUG_MODE
        value: false
    healthCheckPath: /health

databases:
  - name: conversations-db
    plan: starter
    databaseName: conversations
    user: conversations_user