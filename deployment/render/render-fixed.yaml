services:
  # Fixed Cross-Channel AI Agents Service
  # Addresses missing dependencies: express and pyngrok
  - type: web
    name: cross-channel-ai-fixed
    runtime: python3
    buildCommand: |
      # Show Python version info
      echo "üêç Python version: $(python --version)"
      
      # Upgrade build tools
      pip install --upgrade pip setuptools wheel
      
      # Install Python dependencies (now includes pyngrok)
      pip install -r requirements.txt --no-cache-dir
      echo "‚úÖ Python dependencies installed"
      
      # Verify core Python imports
      python -c "import pandas, aiohttp, flask, twilio, openai, pyngrok; print('‚úÖ All Python dependencies verified')"
      
      # Install Node.js
      curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
      apt-get install -y nodejs
      echo "üü¢ Node.js $(node --version) ready"
      
      # Fix Node.js dependencies with explicit installation
      cd Conversations
      
      # Clear any cache/lock files
      rm -rf node_modules package-lock.json
      npm cache clean --force
      
      # Install backend dependencies explicitly
      echo "üì¶ Installing backend dependencies..."
      npm install express cors dotenv helmet morgan multer twilio uuid --save --no-optional
      
      # Install all dependencies from package.json
      npm install --production --no-optional
      
      # Verify express is available
      node -e "console.log('Express version:', require('express/package.json').version)"
      
      # Install client dependencies and build
      cd client
      npm install --production --no-optional
      npm run build
      cd ..
      
      # Return to root
      cd ..
      
      echo "‚úÖ All dependencies installed successfully!"
      
      # Prepare startup script
      chmod +x start_complete_server.py
    startCommand: python start_complete_server.py
    plan: starter
    env:
      - key: DEPLOYMENT_ENVIRONMENT
        value: render
      - key: PORT
        generateValue: true
      - key: NODE_ENV
        value: production
      # Twilio Configuration
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_INTELLIGENCE_SERVICE_SID
        sync: false
      # OpenAI Configuration
      - key: OPENAI_API_KEY
        sync: false
      # Segment Configuration (optional)
      - key: SEGMENT_SPACE_ID
        sync: false
      - key: SEGMENT_ACCESS_SECRET
        sync: false
      # Debug Configuration
      - key: DEBUG_MODE
        value: false
    healthCheckPath: /health

databases:
  - name: conversations-db
    plan: starter
    databaseName: conversations
    user: conversations_user